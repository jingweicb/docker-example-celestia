# This is a TOML config file.
# For more information, see https://github.com/toml-lang/toml

# NOTE: Any path below can be absolute (e.g. "/var/myawesomeapp/data") or
# relative to the home directory (e.g. "data"). The home directory is
# "$HOME/.tendermint" by default, but could be changed via $TMHOME env variable
# or --home cmd flag.

#######################################################################
###                   Main Base Config Options                      ###
#######################################################################

# TCP or UNIX socket address of the ABCI application,
# or the name of an ABCI application compiled in with the Tendermint binary
proxy_app = "tcp://127.0.0.1:26658"

# A custom human readable name for this node
moniker = "celestia-cb-01"

# If this node is many blocks behind the tip of the chain, FastSync
# allows them to catchup quickly by downloading blocks in parallel
# and verifying their commits
fast_sync = true

# Database backend: goleveldb | cleveldb | boltdb | rocksdb | badgerdb
# * goleveldb (github.com/syndtr/goleveldb - most popular implementation)
#   - pure go
#   - stable
# * cleveldb (uses levigo wrapper)
#   - fast
#   - requires gcc
#   - use cleveldb build tag (go build -tags cleveldb)
# * boltdb (uses etcd's fork of bolt - github.com/etcd-io/bbolt)
#   - EXPERIMENTAL
#   - may be faster is some use-cases (random reads - indexer)
#   - use boltdb build tag (go build -tags boltdb)
# * rocksdb (uses github.com/tecbot/gorocksdb)
#   - EXPERIMENTAL
#   - requires gcc
#   - use rocksdb build tag (go build -tags rocksdb)
# * badgerdb (uses github.com/dgraph-io/badger)
#   - EXPERIMENTAL
#   - use badgerdb build tag (go build -tags badgerdb)
db_backend = "goleveldb"

# Database directory
db_dir = "data"

# Output level for logging, including package level options
log_level = "info"

# Output format: 'plain' (colored text) or 'json'
log_format = "json"

##### additional base config options #####

# Path to the JSON file containing the initial validator set and other meta data
genesis_file = "config/genesis.json"

# Path to the JSON file containing the private key to use as a validator in the consensus protocol
priv_validator_key_file = "config/priv_validator_key.json"

# Path to the JSON file containing the last sign state of a validator
priv_validator_state_file = "data/priv_validator_state.json"

# TCP or UNIX socket address for Tendermint to listen on for
# connections from an external PrivValidator process
priv_validator_laddr = ""

# Path to the JSON file containing the private key to use for node authentication in the p2p protocol
node_key_file = "config/node_key.json"

# Mechanism to connect to the ABCI application: socket | grpc
abci = "socket"

# If true, query the ABCI app on connecting to a new peer
# so the app can decide if we should keep the connection or not
filter_peers = false


#######################################################################
###                 Advanced Configuration Options                  ###
#######################################################################

#######################################################
###       RPC Server Configuration Options          ###
#######################################################
[rpc]

# TCP or UNIX socket address for the RPC server to listen on
laddr = "tcp://0.0.0.0:26657"

# A list of origins a cross-domain request can be executed from
# Default value '[]' disables cors support
# Use '["*"]' to allow any origin
cors_allowed_origins = []

# A list of methods the client is allowed to use with cross-domain requests
cors_allowed_methods = ["HEAD", "GET", "POST", ]

# A list of non simple headers the client is allowed to use with cross-domain requests
cors_allowed_headers = ["Origin", "Accept", "Content-Type", "X-Requested-With", "X-Server-Time", ]

# TCP or UNIX socket address for the gRPC server to listen on
# NOTE: This server only supports /broadcast_tx_commit
grpc_laddr = ""

# Maximum number of simultaneous connections.
# Does not include RPC (HTTP&WebSocket) connections. See max_open_connections
# If you want to accept a larger number than the default, make sure
# you increase your OS limits.
# 0 - unlimited.
# Should be < {ulimit -Sn} - {MaxNumInboundPeers} - {MaxNumOutboundPeers} - {N of wal, db and other open files}
# 1024 - 40 - 10 - 50 = 924 = ~900
grpc_max_open_connections = 900

# Activate unsafe RPC commands like /dial_seeds and /unsafe_flush_mempool
unsafe = false

# Maximum number of simultaneous connections (including WebSocket).
# Does not include gRPC connections. See grpc_max_open_connections
# If you want to accept a larger number than the default, make sure
# you increase your OS limits.
# 0 - unlimited.
# Should be < {ulimit -Sn} - {MaxNumInboundPeers} - {MaxNumOutboundPeers} - {N of wal, db and other open files}
# 1024 - 40 - 10 - 50 = 924 = ~900
max_open_connections = 900

# Maximum number of unique clientIDs that can /subscribe
# If you're using /broadcast_tx_commit, set to the estimated maximum number
# of broadcast_tx_commit calls per block.
max_subscription_clients = 100

# Maximum number of unique queries a given client can /subscribe to
# If you're using GRPC (or Local RPC client) and /broadcast_tx_commit, set to
# the estimated # maximum number of broadcast_tx_commit calls per block.
max_subscriptions_per_client = 5

# Experimental parameter to specify the maximum number of events a node will
# buffer, per subscription, before returning an error and closing the
# subscription. Must be set to at least 100, but higher values will accommodate
# higher event throughput rates (and will use more memory).
experimental_subscription_buffer_size = 200

# Experimental parameter to specify the maximum number of RPC responses that
# can be buffered per WebSocket client. If clients cannot read from the
# WebSocket endpoint fast enough, they will be disconnected, so increasing this
# parameter may reduce the chances of them being disconnected (but will cause
# the node to use more memory).
#
# Must be at least the same as "experimental_subscription_buffer_size",
# otherwise connections could be dropped unnecessarily. This value should
# ideally be somewhat higher than "experimental_subscription_buffer_size" to
# accommodate non-subscription-related RPC responses.
experimental_websocket_write_buffer_size = 200

# If a WebSocket client cannot read fast enough, at present we may
# silently drop events instead of generating an error or disconnecting the
# client.
#
# Enabling this experimental parameter will cause the WebSocket connection to
# be closed instead if it cannot read fast enough, allowing for greater
# predictability in subscription behaviour.
experimental_close_on_slow_client = false

# How long to wait for a tx to be committed during /broadcast_tx_commit.
# WARNING: Using a value larger than 10s will result in increasing the
# global HTTP write timeout, which applies to all connections and endpoints.
# See https://github.com/tendermint/tendermint/issues/3435
timeout_broadcast_tx_commit = "50s"

# Maximum size of request body, in bytes
max_body_bytes = 8388608

# Maximum size of request header, in bytes
max_header_bytes = 1048576

# The path to a file containing certificate that is used to create the HTTPS server.
# Might be either absolute path or path related to Tendermint's config directory.
# If the certificate is signed by a certificate authority,
# the certFile should be the concatenation of the server's certificate, any intermediates,
# and the CA's certificate.
# NOTE: both tls_cert_file and tls_key_file must be present for Tendermint to create HTTPS server.
# Otherwise, HTTP server is run.
tls_cert_file = ""

# The path to a file containing matching private key that is used to create the HTTPS server.
# Might be either absolute path or path related to Tendermint's config directory.
# NOTE: both tls-cert-file and tls-key-file must be present for Tendermint to create HTTPS server.
# Otherwise, HTTP server is run.
tls_key_file = ""

# pprof listen address (https://golang.org/pkg/net/http/pprof)
pprof_laddr = "localhost:6060"

#######################################################
###           P2P Configuration Options             ###
#######################################################
[p2p]

# Address to listen for incoming connections
laddr = "tcp://0.0.0.0:26656"

# Address to advertise to peers for them to dial
# If empty, will use the same port as the laddr,
# and will introspect on the listener or use UPnP
# to figure out the address. ip and port are required
# example: 159.89.10.97:26656
external_address = ""

# Comma separated list of seed nodes to connect to
seeds = "e6116822e1a5e283d8a85d3ec38f4d232274eaf3@consensus-full-seed-1.celestia-bootstrap.net:26656,cf7ac8b19ff56a9d47c75551bd4864883d1e24b5@consensus-full-seed-2.celestia-bootstrap.net:26656"

# Comma separated list of nodes to keep persistent connections to
persistent_peers = "4b19506a0432de219ee2db883c53756c1b3cbdfb@88.217.142.187:26656,890940193b592e7b53b882b62bf85d7a25190192@51.222.244.105:26656,a623f039a36391662a3b514d1fa17fbaa2e25319@149.50.96.24:16656,7d5767dfe229d6b82246165c1c353a56a6da1983@54.177.201.19:26656,de7a0953f9d5878604c077a54925167c120a97eb@141.95.65.115:26656,c89507c926f41901784f54b26e1ccc49ac9ecfda@31.214.144.83:20056,f103c4809c8263b311463422195e6ad8526911d6@74.118.136.167:26656,0cb62ebbce54e2d5e72ced753a879d3c08c61583@162.19.171.80:26656,dd603ca5470c0f195dea38d1f938b9e43a729a47@162.19.170.154:26656,6ba9f87efe6beb23bb7af2204eac769767d8ec78@78.129.165.127:23656,491c37d5de210600463c5599a3ffd272c8690014@57.128.20.184:23656,7f067f54987cccfe489fbe302ff1bf6c56aaf02f@162.19.81.54:23656,0cca24be2f0d845e67a3135fb67dff6e71750e60@148.251.151.51:16400,3af3e3556515eb68bfe4ec5ad134eb9ec56b521d@51.81.166.95:16400,994574dc373fc7552d5fb2616ca9d40654760a91@141.164.42.9:16400,d364357f55e37a038d9dbd143448ea792bb8edcf@15.235.115.156:16400,624257ef1a8b6e2d39ac13ed3e3e16963fbb54ea@149.102.156.193:26656,d5fafee95503bb76719f5c2849f3fe0be46e758c@217.160.39.214:26656,45779d388b18ad48d98c6ad54f35e95fe2a3b35a@165.22.30.175:26656,4ebfc1fac7a646105956ee563ea0d760e3099269@celestia-peer1.easy2stake.com:26756,87af580078c80c630625db2360b3dc19483d29cd@185.182.194.163:26656,005b439eca9a27b736156c0081a863a40b3be517@peers.celestia-node.pn.prod.fcstech.de:26656,5992372287bbb173bd291e299a26495057310165@57.128.74.73:26656,29c8a82a0be59a2c6a5d6fb2ad0a2e1b4d09de0f@181.188.232.25:26656,72dd61ecab64873e45c77f902fec73069dfb33f0@103.219.171.65:26656,0a0da77a47cc1a58febe39c73b3bc96758455de6@142.165.207.45:26656,3c18baae029c2d39347ef77ac777fe6fd38bc1e6@176.9.48.38:20056,1d824f2cf4df9c9da98c120b78be3f4319a1d7ff@46.4.23.42:26656,b1187a51400cef8b49a8482088eac57327989fe8@135.181.75.114:26656,deefd5d3a4d497be6772295d10174f021d344ac5@57.128.75.161:26656,094e037734702dc0803a58a10b50fc3bb46c7e73@51.210.34.156:26656,24a869f01efa19104dbce61ae6697952a9e9a5d2@139.84.232.124:26656,1b92a439555a19ee6edea85b184abb6873757dae@51.89.173.96:43656,8240e8a13594d40b6839f183795c551503309d3c@57.128.87.18:26656,3b11e4123a9db23f72fb5828b3f5b101217ee43d@116.202.208.214:2600,c1c92e14d641a6368627da662b96ff77135e4754@185.182.193.20:26656,4ebe56795fc5da1c0dc5f7acd5760d5c8fd4d250@5.9.87.216:33357,bb72dcd76b96214c4e647a1ebfe47c9e541d5325@185.182.186.202:26656,be5ea8954fa452ad464ae8a7067f01bf5a0da556@147.135.144.53:26656,95c00bb9f24e907891e9a98c4ad506af093a7944@87.106.237.243:26656,4ad28c8a0b04bac4aac441b105c815c449e2182f@65.108.61.189:26656,c7dac72f630d2b3c3354ed664bcd6704a8f9e627@51.79.229.177:26656,ce2873ef3893f0da50eb27892761e9c06e704944@159.203.143.94:26656,1b92a439555a19ee6edea85b184abb6873757dae@51.89.173.96:26656,ea9d858371ba86ae8f9c5b292c105329029c9efd@5.199.174.19:26656,5bc86308e2b3730ce611abf622c8be752780f934@5.199.172.53:26656,acca7837e4eb5f9dc7f5a94ed1d82edda6931ff8@rpc-celestia.pops.one:26656,f5bce79feec9068154e7f50fe8db7a8191a58663@82.220.38.204:10056,629c36a551ee1a3c8bb3ecee6e00a9977a60e53e@65.108.46.248:56656,d0c530290267e1c539f27061c9446d5042eaf1ca@161.97.180.20:26656,b3f473393a6469c0da65e4a7ebaa3ff3182df705@37.120.245.32:26656,a41b4bc451b1b71d537aa1018226e08d7fa7e44e@5.255.77.44:26656,2f05b07cde80c5b08ee0159658f7977c7765f966@148.113.17.55:26756,572cb08735d4572fe62b2fc8b9555c479d8e162f@65.108.137.217:26656,22ea694db139e744c46c74c9b5f22851266630af@51.159.80.121:2090,5001de72be39622c9dc34f2117eccc3f3fca8a7a@celestia-mainnet-01.twinstake.io:26756,9a82b9bc0ab0f15692952aa829c8ba7d2f55315f@78.46.93.125:26666,e979a4f3528a4fac1c1ab93af14d26b978eead8a@162.19.72.172:26656,62b11589e64b4cef9f7202a2fd012937b1522745@65.21.69.251:26656,b751ffe713e3e5d80e8f45c3bd5e640ee9a91cb9@10.129.127.95:26656,fef05ab5f892d8c85c13e08f49935f1b0077efd0@95.163.230.31:26656,1d607e1859212eb8cd4130a1df074d201fb5186c@168.119.64.26:26656,0015a3241645e7029804f5e363cdc1822eb0797b@mainnet.celestia.stakingcabin.com:26656,4727239dfe0173ef862f55c2fa26e9a6a057a572@celestia-mainnet.stakingwizard.com:26656,5b0d1b8cb6f893426168300f69a82750d4be8729@193.35.57.185:11656,23b88ebcfb2177dbd2d8b2920c363a25e038e69a@89.58.61.213:2000,00133e62873e724700421d41d4f2f6d24b849bf4@185.111.159.231:2000,58e2c4d930c235aeee1e5bd4b906aa373f0ad4f5@65.21.232.33:2000,a86cfe5a22e73ff0c9ceec388e9b52bf8355efdd@85.239.233.57:2000,b833d0cac06e9831550f3273de21792cec23211d@78.46.21.248:26656,76455257d6ae848d17b6e324b1b278c01f4b769d@celestia-peer.freshstaking.com:34656,b8c78f8edb68486ed07d7c34fc694be4fc37cd34@144.217.71.152:26656"

# UPNP port forwarding
upnp = false

# Path to address book
addr_book_file = "config/addrbook.json"

# Set true for strict address routability rules
# Set false for private or local networks
addr_book_strict = true

# Maximum number of inbound peers
max_num_inbound_peers = 40

# Maximum number of outbound peers to connect to, excluding persistent peers
max_num_outbound_peers = 10

# List of node IDs, to which a connection will be (re)established ignoring any existing limits
unconditional_peer_ids = ""

# Maximum pause when redialing a persistent peer (if zero, exponential backoff is used)
persistent_peers_max_dial_period = "0s"

# Time to wait before flushing messages out on the connection
flush_throttle_timeout = "100ms"

# Maximum size of a message packet payload, in bytes
max_packet_msg_payload_size = 1024

# Rate at which packets can be sent, in bytes/second
send_rate = 5120000

# Rate at which packets can be received, in bytes/second
recv_rate = 5120000

# Set true to enable the peer-exchange reactor
pex = true

# Seed mode, in which node constantly crawls the network and looks for
# peers. If another node asks it for addresses, it responds and disconnects.
#
# Does not work if the peer-exchange reactor is disabled.
seed_mode = false

# Comma separated list of peer IDs to keep private (will not be gossiped to other peers)
private_peer_ids = ""

# Toggle to disable guard against peers connecting from the same ip.
allow_duplicate_ip = false

# Peer connection configuration.
handshake_timeout = "20s"
dial_timeout = "3s"

#######################################################
###          Mempool Configuration Option          ###
#######################################################
[mempool]

# Mempool version to use:
#   1) "v0" - (default) FIFO mempool.
#   2) "v1" - prioritized mempool.
version = "v1"

recheck = true
broadcast = true
wal_dir = ""

# Maximum number of transactions in the mempool
size = 5000

# Limit the total size of all txs in the mempool.
# This only accounts for raw transactions (e.g. given 1MB transactions and
# max_txs_bytes=5MB, mempool will only accept 5 transactions).
max_txs_bytes = 1073741824

# Size of the cache (used to filter transactions we saw earlier) in transactions
cache_size = 10000

# Do not remove invalid transactions from the cache (default: false)
# Set to true if it's not possible for any invalid transaction to become valid
# again in the future.
keep-invalid-txs-in-cache = true

# Maximum size of a single transaction.
# NOTE: the max size of a tx transmitted over the network is {max_tx_bytes}.
max_tx_bytes = 2097152

# Maximum size of a batch of transactions to send to a peer
# Including space needed by encoding (one varint per transaction).
# XXX: Unused due to https://github.com/tendermint/tendermint/issues/5796
max_batch_bytes = 0

# ttl-duration, if non-zero, defines the maximum amount of time a transaction
# can exist for in the mempool.
#
# Note, if ttl-num-blocks is also defined, a transaction will be removed if it
# has existed in the mempool at least ttl-num-blocks number of blocks or if it's
# insertion time into the mempool is beyond ttl-duration.
ttl-duration = "0s"

# ttl-num-blocks, if non-zero, defines the maximum number of blocks a transaction
# can exist for in the mempool.
#
# Note, if ttl-duration is also defined, a transaction will be removed if it
# has existed in the mempool at least ttl-num-blocks number of blocks or if
# it's insertion time into the mempool is beyond ttl-duration.
ttl-num-blocks = 15

#######################################################
###         State Sync Configuration Options        ###
#######################################################
[statesync]
# State sync rapidly bootstraps a new node by discovering, fetching, and restoring a state machine
# snapshot from peers instead of fetching and replaying historical blocks. Requires some peers in
# the network to take and serve state machine snapshots. State sync is not attempted if the node
# has any local state (LastBlockHeight > 0). The node will have a truncated block history,
# starting from the height of the snapshot.
enable = false

# RPC servers (comma-separated) for light client verification of the synced state machine and
# retrieval of state data for node bootstrapping. Also needs a trusted height and corresponding
# header hash obtained from a trusted source, and a period during which validators can be trusted.
#
# For Cosmos SDK-based chains, trust_period should usually be about 2/3 of the unbonding time (~2
# weeks) during which they can be financially punished (slashed) for misbehavior.
rpc_servers = ""
trust_height = 0
trust_hash = ""
trust_period = "168h0m0s"

# Time to spend discovering snapshots before initiating a restore.
discovery_time = "15s"

# Temporary directory for state sync snapshot chunks, defaults to the OS tempdir (typically /tmp).
# Will create a new, randomly named directory within, and remove it when done.
temp_dir = ""

# The timeout duration before re-requesting a chunk, possibly from a different
# peer (default: 1 minute).
chunk_request_timeout = "10s"

# The number of concurrent chunk fetchers to run (default: 1).
chunk_fetchers = "4"

#######################################################
###       Fast Sync Configuration Connections       ###
#######################################################
[fastsync]

# Fast Sync version to use:
#   1) "v0" (default) - the legacy fast sync implementation
#   2) "v1" - refactor of v0 version for better testability
#   2) "v2" - complete redesign of v0, optimized for testability & readability
version = "v0"

#######################################################
###         Consensus Configuration Options         ###
#######################################################
[consensus]

wal_file = "data/cs.wal/wal"

# How long we wait for a proposal block before prevoting nil
timeout_propose = "10s"
# How much timeout_propose increases with each round
timeout_propose_delta = "500ms"
# How long we wait after receiving +2/3 prevotes for “anything” (ie. not a single block or nil)
timeout_prevote = "1s"
# How much the timeout_prevote increases with each round
timeout_prevote_delta = "500ms"
# How long we wait after receiving +2/3 precommits for “anything” (ie. not a single block or nil)
timeout_precommit = "1s"
# How much the timeout_precommit increases with each round
timeout_precommit_delta = "500ms"
# How long we wait after committing a block, before starting on the new
# height (this gives us a chance to receive some more precommits, even
# though we already have +2/3).
timeout_commit = "25s"

# How many blocks to look back to check existence of the node's consensus votes before joining consensus
# When non-zero, the node will panic upon restart
# if the same consensus key was used to sign {double_sign_check_height} last blocks.
# So, validators should stop the state machine, wait for some blocks, and then restart the state machine to avoid panic.
double_sign_check_height = 0

# Make progress as soon as we have all the precommits (as if TimeoutCommit = 0)
skip_timeout_commit = false

# EmptyBlocks mode and possible interval between empty blocks
create_empty_blocks = true
create_empty_blocks_interval = "0s"

# Reactor sleep duration parameters
peer_gossip_sleep_duration = "100ms"
peer_query_maj23_sleep_duration = "2s"

#######################################################
###   Transaction Indexer Configuration Options     ###
#######################################################
[tx_index]

# What indexer to use for transactions
#
# The application will set which txs to index. In some cases a node operator will be able
# to decide which txs to index based on configuration set in the application.
#
# Options:
#   1) "null"
#   2) "kv" (default) - the simplest possible indexer, backed by key-value storage (defaults to levelDB; see DBBackend).
# 		- When "kv" is chosen "tx.height" and "tx.hash" will always be indexed.
#   3) "psql" - the indexer services backed by PostgreSQL.
# When "kv" or "psql" is chosen "tx.height" and "tx.hash" will always be indexed.
indexer = "kv"

# The PostgreSQL connection configuration, the connection format:
#   postgresql://<user>:<password>@<host>:<port>/<db>?<opts>
psql-conn = ""

#######################################################
###       Instrumentation Configuration Options     ###
#######################################################
[instrumentation]

# When true, Prometheus metrics are served under /metrics on
# PrometheusListenAddr.
# Check out the documentation for the list of available metrics.
prometheus = false

# Address to listen for Prometheus collector(s) connections
prometheus_listen_addr = ":26660"

# Maximum number of simultaneous connections.
# If you want to accept a larger number than the default, make sure
# you increase your OS limits.
# 0 - unlimited.
max_open_connections = 3

# Instrumentation namespace
namespace = "tendermint"
